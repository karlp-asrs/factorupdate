library(asrsMethods)
library(devtools)
install_github("asrs-karlp/asrsMethods/asrsMethods")
install_github("karlp-asrs/asrsMethods/asrsMethods")
#
# if you haven't installed the ASRS method package, uncomment the following two lines to install it
# library(devtools)
# install_github("karlp-asrs/asrsMethods/asrsMethods")
#
library(zoo)
library(asrsMethods)
library(lubridate)
#
#first let's build a simple real estate project
#assumptions:
#  buy building for $1 million
#  collect triple net rent at 6% for 5 years
#  fix roof (an exclusion from triple net in your lease) for $50 thousand two years after buying
#  then sell the building for $1.2 million
buy_building=zoo(as.Date("2011-1-13"),-1e6)
nnn_rent=zoo(as.Date("2011-2-1")+months(0:59),5000)
fix_roof=zoo(as.Date("2013-2-1"),-50000)
sell_building=zoo(as.Date("2016-1-29"),1.2e6)
net_cf=mergesum.z(buy_building,nnn_rent,fix_roof,sell_building)
plot(cumsum(net_cf))
net_cf
buy_building
help(zoo)
#
#first let's build a simple real estate project
#assumptions:
#  buy building for $1 million
#  collect triple net rent at 6% for 5 years
#  fix roof (an exclusion from triple net in your lease) for $50 thousand two years after buying
#  then sell the building for $1.2 million
buy_building=zoo(-1e6,as.Date("2011-1-13"))
nnn_rent=zoo(5000,as.Date("2011-2-1")+months(0:59))
fix_roof=zoo(-50000,as.Date("2013-2-1"))
sell_building=zoo(1.2e6,as.Date("2016-1-29"))
net_cf=mergesum.z(buy_building,nnn_rent,fix_roof,sell_building)
plot(cumsum(net_cf))
plot(cumsum(net_cf))
plot(net_cf)
plot(net_cf/1000)
irr.z(net_cf)
buy_building=zoo(-1e6,as.Date("2011-1-13"))
nnn_rent=zoo(5000,as.Date("2011-2-1")+months(0:59))
fix_roof=zoo(-50000,as.Date("2013-3-15"))
sell_building=zoo(1.2e6,as.Date("2016-1-29"))
net_cf=mergesum.z(buy_building,nnn_rent,fix_roof,sell_building)
plot(net_cf/1000)
irr.z(net_cf)
rep(c(3000,3000*1.05),c(36,24))
#
#first let's build a simple real estate project
#assumptions:
#  buy building for $1 million on Jan 13, 2011
#  collect triple net rent at 6% for 3 years then a 5% rent bumpt for next two years
#  fix roof (an exclusion from triple net in your lease) for $50 thousand two years after buying, paid the bill on March 15
#  then sell the building for $1.2 million after 5 year hold, selling on Jan 29, 2016
buy_building=zoo(-1e6,as.Date("2011-1-13"))
nnn_rent=zoo(rep(c(3000,3000*1.05),c(36,24)),as.Date("2011-2-1")+months(0:59))
fix_roof=zoo(-50000,as.Date("2013-3-15"))
sell_building=zoo(1.2e6,as.Date("2016-1-29"))
net_cf=mergesum.z(buy_building,nnn_rent,fix_roof,sell_building)
plot(net_cf/1000)
irr.z(net_cf)
buy_building=zoo(-1e6,as.Date("2011-1-13"))
nnn_rent=zoo(rep(c(5000,5000*1.05),c(36,24)),as.Date("2011-2-1")+months(0:59))
fix_roof=zoo(-50000,as.Date("2013-3-15"))
sell_building=zoo(1.2e6,as.Date("2016-1-29"))
net_cf=mergesum.z(buy_building,nnn_rent,fix_roof,sell_building)
plot(net_cf/1000)
irr.z(net_cf)
#
# first let's invent an index with expected return of 2% per quarter and standard deviation of 1%
re_idx=zoo(rnorm(28,.02,.01),-1+as.Date("2011-1-1")+(0:27*3))
re_idx
#
# first let's invent an index with expected return of 2% per quarter and standard deviation of 1%
re_idx=zoo(rnorm(28,.02,.01),-1+as.Date("2011-1-1")+months(0:27*3))
re_idx
0:27*3
months(0:27*3)
#
# first let's invent an index with expected return of 2% per quarter and standard deviation of 1%
re_idx=zoo(rnorm(28,.02,.01),as.Date("2011-1-1")+months(0:27*3)-1)
re_idx
gd(re_idx)
#
#now we need to turn this in to a daily total return index
re_idx_gd=gd(re_idx) #convert to growth of a dollar
alldays=as.Date(time(re_idx_gd)[1],lastinvec(time(re_idx_gd)))
tail(alldays)
head(alldays)
alldays=as.Date(time(re_idx_gd)[1]:lastinvec(time(re_idx_gd)))
tail(alldays)
head(alldays)
length(alldays)
re_idx_daily=mergesum.z(re_idx_gd,zoo(NA,alldays))
re_idx_daily=na.approx(re_idx_daily)
head(re_idx_daily)
#
#now we need to turn this in to a daily total return index
re_idx_gd=gd(re_idx) #convert to growth of a dollar
alldays=as.Date(time(re_idx_gd)[1]:lastinvec(time(re_idx_gd))) #make a vector of all calendar dates from beginning to end of index data
re_idx_daily=mergesum.z(re_idx_gd,zoo(NA,alldays))
head(re_idx_daily)
re_idx_daily=mergesum(re_idx_gd,zoo(NA,alldays))
re_idx_daily=merge(re_idx_gd,zoo(NA,alldays))
re_idx_daily
head(re+idx_daily)
head(re_idx_daily)
tail(re_idx_daily)
re_idx_daily=merge(re_idx_gd,zoo(NA,alldays))[,1]
re_idx_daily=na.approx(re_idx_daily)
head(re_idx_daily
)
tail(re_idx_daily)
plot(re_idx_daily)
re_pme=pestats(net_cf,re_idx_daily[time(net_cf)])
re_pme$irr
re_pme$pme
re_pme$ind.irr
library(zoo)
knitr::opts_chunk$set(echo = TRUE)
library(asrsMethods)
library(zoo)
dates1=as.Date("2017/1/3")+c(0,80,200)
zoo(1:3,dates1)
dates1=as.Date("2017/1/3")+c(0,80,300)
cf1=zoo(c(-100,20,100),dates1)
ind1=zoo(c(100,110,120),dates1)
dates2=as.Date("2017/2/12")+c(0,50,1800)
cf2=zoo(c(-500,600,100),dates2)
ind2=zoo(c(100,110,140),dates2)
fund1=pestats(cf1,ind1)
fund2=pestats(cf2,ind2)
fund1
pestats
fund1["IRR"]
fund1["irr"]
fund1[c("irr","ind.irr")]
fund1[c("pme","irr","ind.irr")]
fund2[c("pme","irr","ind.irr")]
irr(cf1+cf2)
irr.z(cf1+cf2)
cf1+cf2
cf1
cf2
mergesum.z(cf1,cf2)
irr.z(mergesum.z(cf1,cf2))
dates1=as.Date("2017/1/3")+c(0,80,300)
cf1=zoo(c(-100,20,100),dates1)
ind1=zoo(c(100,110,120),dates1)
dates2=as.Date("2017/2/12")+c(0,50,180)
cf2=zoo(c(-500,520,100),dates2)
ind2=zoo(c(100,110,130),dates2)
fund1=pestats(cf1,ind1)
fund2=pestats(cf2,ind2)
irr.z(mergesum.z(cf1,cf2))
dates1=as.Date("2017/1/3")+c(0,80,300)
cf1=zoo(c(-100,20,100),dates1)
ind1=zoo(c(100,110,120),dates1)
dates2=as.Date("2017/2/12")+c(0,50,180)
cf2=zoo(c(-500,520,50),dates2)
ind2=zoo(c(100,110,130),dates2)
fund1=pestats(cf1,ind1)
fund2=pestats(cf2,ind2)
irr.z(mergesum.z(cf1,cf2))
fund1.fv=cf1*ind1/ind1[1]
fund2.fv=cf2*ind2/ind2[1]
fund1.fv
ind1
fund1.fv=cf1*ind1/coredata(ind1[1])
fund1.fv
cf1
fund1.fv=cf1*ind1/coredata(ind1[1])
fund2.fv=cf2*ind2/coredata(ind2[1])
c.fv=mergesum.z(fund1.fv,fund2.fv)
c.fv[c.fv>0]
c.fv[c.fv<0]
pme.c=-sum(c.fv[c.fv>0])/sum(c.fv[c.fv<0])
pme.c
alpha.c=irr.z(c.fv)
alpha.c
fund1$alpha
fund2$alpha
c.fv
irr.z(c.fv)
pestats
fv1=coredata(lastinvec(ind1))/ind1
fund1.fv=cf1*fvfactor
fv1=coredata(lastinvec(ind1))/ind1
fund1.fv=cf1*fv1
fv2=coredata(lastinvec(ind2))/ind2
fund2.fv=cf1*fv2
c.fv=mergesum.z(fund1.fv,fund2.fv)
pme.c=-sum(c.fv[c.fv>0])/sum(c.fv[c.fv<0])
alpha.c=log(1+irr.z(c.fv, gips=TRUE))
ind.irr=-1+exp(log(1+irr.c)-alpha.c)
irr.c=irr.z(mergesum.z(cf1,cf2))
irr.c
ind.irr=-1+exp(log(1+irr.c)-alpha.c)
ind.irr
pme.c
fund1$pme
c.fv
fv1=coredata(lastinvec(ind1))/ind1
fund1.fv=cf1*fv1
fv2=coredata(lastinvec(ind2))/ind2
fund2.fv=cf2*fv2
c.fv=mergesum.z(fund1.fv,fund2.fv)
pme.c=-sum(c.fv[c.fv>0])/sum(c.fv[c.fv<0])
alpha.c=log(1+irr.z(c.fv, gips=TRUE))
ind.irr=-1+exp(log(1+irr.c)-alpha.c)
ind.irr
irr.c
fund1$ind.irr
fund2$ind.irr
fund2$irr
dates1=as.Date("2017/1/3")+c(0,80,300)
cf1=zoo(c(-100,20,100),dates1)
ind1=zoo(c(100,110,120),dates1)
dates2=as.Date("2017/2/12")+c(0,50,180)
cf2=zoo(c(-500,520,50),dates2)
ind2=zoo(c(100,110,130),dates2)
fund1=pestats(cf1,ind1)
fund2=pestats(cf2,ind2)
fund1[c("pme","irr","ind.irr")]
fund2[c("pme","irr","ind.irr")]
irr.c=irr.z(mergesum.z(cf1,cf2))
irr.c
irr.c=irr.z(mergesum.z(cf1,cf2),gips=TRUE)
irr.c
dates1=as.Date("2017/1/3")+c(0,280,400)
cf1=zoo(c(-100,20,100),dates1)
ind1=zoo(c(100,110,120),dates1)
dates2=as.Date("2017/2/12")+c(0,150,380)
cf2=zoo(c(-500,520,50),dates2)
ind2=zoo(c(100,110,130),dates2)
fund1=pestats(cf1,ind1)
fund2=pestats(cf2,ind2)
fund2$ind.irr
today()
sys.time()
Sys.time()
as.Date(Sys.time())
cfl=list(cf1,cf2)
indl=list(ind1,ind2)
cfl
mergesum.z(cfl)
do.call(mergesum.z,cfl)
tvpi
fund1
n=length(cfl)
pestat_multibench=function(cfl,indl) {
#cfl is a list of cash flows
#indl is a list of total return indices
if(length(cfl)!=length(indl)) stop("length of cash flow and index lists not the same")
n=length(cfl)
fv1=zoo(0,as.Date(Sys.time()))
for(i in 1:n) {
fv2=coredata(lastinvec(indl[[i]]))/cfl[[i]]
fv1=mergesum.z(fv1,fv2)
}
pme.c=-sum(fv1[fv1>0])/sum(fv1[fv1<0])
alpha.c=log(1+irr.z(fv1,gips=TRUE))
irr=irr.z(do.call(mergexum.z,cfl))
ind.irr=-1+exp(log(1+irr)-alpha.c)
pme=-sum(fv1[fv>0])/sum(fv1[fv1<0])
ans=list()
ans$irr=irr
ans$ind.irr=ind.irr
ans$pme=pme
ans$tvpi=tvpi(do.call(mergesum.z,cf1))
return(ans)
}
cfl=list(cf1,cf2)
indl=list(ind1,ind2)
pestat_multibench(cfl,indl)
pestat_multibench=function(cfl,indl) {
#cfl is a list of cash flows
#indl is a list of total return indices
if(length(cfl)!=length(indl)) stop("length of cash flow and index lists not the same")
n=length(cfl)
fv1=zoo(0,as.Date(Sys.time()))
for(i in 1:n) {
fv2=coredata(lastinvec(indl[[i]]))/cfl[[i]]
fv1=mergesum.z(fv1,fv2)
}
pme.c=-sum(fv1[fv1>0])/sum(fv1[fv1<0])
alpha.c=log(1+irr.z(fv1,gips=TRUE))
irr=irr.z(do.call(mergesum.z,cfl))
ind.irr=-1+exp(log(1+irr)-alpha.c)
pme=-sum(fv1[fv>0])/sum(fv1[fv1<0])
ans=list()
ans$irr=irr
ans$ind.irr=ind.irr
ans$pme=pme
ans$tvpi=tvpi(do.call(mergesum.z,cf1))
return(ans)
}
cfl=list(cf1,cf2)
indl=list(ind1,ind2)
pestat_multibench(cfl,indl)
pestat_multibench=function(cfl,indl) {
#cfl is a list of cash flows
#indl is a list of total return indices
if(length(cfl)!=length(indl)) stop("length of cash flow and index lists not the same")
n=length(cfl)
fv1=zoo(0,as.Date(Sys.time()))
for(i in 1:n) {
fv2=coredata(lastinvec(indl[[i]]))/cfl[[i]]
fv1=mergesum.z(fv1,fv2)
}
pme.c=-sum(fv1[fv1>0])/sum(fv1[fv1<0])
alpha.c=log(1+irr.z(fv1,gips=TRUE))
irr=irr.z(do.call(mergesum.z,cfl))
ind.irr=-1+exp(log(1+irr)-alpha.c)
pme=-sum(fv1[fv1>0])/sum(fv1[fv1<0])
ans=list()
ans$irr=irr
ans$ind.irr=ind.irr
ans$pme=pme
ans$tvpi=tvpi(do.call(mergesum.z,cf1))
return(ans)
}
cfl=list(cf1,cf2)
indl=list(ind1,ind2)
pestat_multibench(cfl,indl)
pestat_multibench=function(cfl,indl) {
#cfl is a list of cash flows
#indl is a list of total return indices
if(length(cfl)!=length(indl)) stop("length of cash flow and index lists not the same")
n=length(cfl)
fv1=zoo(0,as.Date(Sys.time()))
for(i in 1:n) {
fv2=coredata(lastinvec(indl[[i]]))/cfl[[i]]
fv1=mergesum.z(fv1,fv2)
}
pme.c=-sum(fv1[fv1>0])/sum(fv1[fv1<0])
alpha.c=log(1+irr.z(fv1,gips=TRUE))
irr=irr.z(do.call(mergesum.z,cfl))
ind.irr=-1+exp(log(1+irr)-alpha.c)
pme=-sum(fv1[fv1>0])/sum(fv1[fv1<0])
ans=list()
ans$irr=irr
ans$ind.irr=ind.irr
ans$pme=pme
ans$tvpi=tvpi(do.call(mergesum.z,cfl))
return(ans)
}
cfl=list(cf1,cf2)
indl=list(ind1,ind2)
pestat_multibench(cfl,indl)
n=length(cfl)
n
fv1=zoo(0,as.Date(Sys.time()))
fv1
for(i in 1:n) {
fv2=coredata(lastinvec(indl[[i]]))/cfl[[i]]
fv1=mergesum.z(fv1,fv2)
}
fv1
indl
cfl
i=1
fv2=coredata(lastinvec(indl[[i]]))/cfl[[i]]
fv2
pestat_multibench=function(cfl,indl) {
#cfl is a list of cash flows
#indl is a list of total return indices
if(length(cfl)!=length(indl)) stop("length of cash flow and index lists not the same")
n=length(cfl)
fv1=zoo(0,as.Date(Sys.time()))
for(i in 1:n) {
fv2=coredata(lastinvec(indl[[i]]))/indl[[i]]
fv3=cfl[[i]]*fv2
fv1=mergesum.z(fv1,fv3)
}
pme.c=-sum(fv1[fv1>0])/sum(fv1[fv1<0])
alpha.c=log(1+irr.z(fv1,gips=TRUE))
irr=irr.z(do.call(mergesum.z,cfl))
ind.irr=-1+exp(log(1+irr)-alpha.c)
pme=-sum(fv1[fv1>0])/sum(fv1[fv1<0])
ans=list()
ans$irr=irr
ans$ind.irr=ind.irr
ans$pme=pme
ans$tvpi=tvpi(do.call(mergesum.z,cfl))
return(ans)
}
cfl=list(cf1,cf2)
indl=list(ind1,ind2)
pestat_multibench(cfl,indl)
library(asrsMethods)
library(zoo)
library(lubridate)
11762-9290-7577+11511+11150
117624-9290-7577+11511+11150
117624-9290+11511
10287+4713+1192
16192/3
16192/3*2.5
650/3400
setwd("C:/Users/karlp/Documents/factorupdate")
knitr::opts_chunk$set(echo = TRUE)
factordat=read.csv("factordat.csv")
head(factordat)
library(asrsMethods)
library(ggplot2)
library(lubridate)
factordat$dateym=as.yearmon(as.Date(factordat$date,format="%m/%d/%Y"))
library(zoo)
factordat$dateym=as.yearmon(as.Date(factordat$date,format="%m/%d/%Y"))
head(factordat)
is.na(factordat$asrs_us_factors)
!is.na(factordat$asrs_us_factors)
library(tidyr)
install.packages("tidyr")
